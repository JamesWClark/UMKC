//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class BinaryTree<T> {
    private BinaryTreeNode<T> root;
    
    public BinaryTree() {
        root = null;
    }

    public virtual void Clear() {
        root = null;
    }

    public virtual BinaryTreeNode<T> Root {
        get {
            return root;
        }
        set {
            root = value;
        }
    }
    public void PreorderTraversal(BinaryTreeNode<T> current) {
        if (current != null) {
            //output value of current node
            Console.Write(current.Value);
            //recursively print left and right
            PreorderTraversal(current.Left);
            PreorderTraversal(current.Right);
        }
    }

    public void InorderTraversal(BinaryTreeNode<T> current) {
        if (current != null) {
            //visit left
            InorderTraversal(current.Left);
            //print
            Console.Write(current.Value);
            //visit right
            InorderTraversal(current.Right);
        }
    }

    public void PostorderTraversal(BinaryTreeNode<T> current) {
        if (current != null) {
            //visit left
            InorderTraversal(current.Left);
            //visit right
            InorderTraversal(current.Right);
            //print
            Console.Write(current.Value);

        }
    }

}

