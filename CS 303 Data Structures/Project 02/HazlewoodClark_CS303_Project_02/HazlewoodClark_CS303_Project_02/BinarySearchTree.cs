//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class BinarySearchTree : BinaryTree
{
    public BinarySearchTree() {

    }
    public BinarySearchTree(BinaryTreeNode root) {
        this.Root = root;
    }
	public virtual bool Insert(BinaryTreeNode subtree, BinaryTreeNode node)
	{
        //if root is null, replace empty tree with new data leaf
        if (this.Root == null) {
            this.Root = node;
            return true;
        }
        //reject data if equal
        else if (node.Data.CompareTo(Root.Data) == 0) {
            return false;
        }
        //less than
        else if (node.Data.CompareTo(Root.Data) < 1) {
            return Insert(this.GetLeftSubtree(), node);
        }
        //greater than
        else {
            return Insert(this.GetRightSubtree(), node);
        }
    }

    public virtual void Erase(BinaryTreeNode node)
	{
		throw new System.NotImplementedException();
	}

    public virtual void Find(BinaryTreeNode node)
	{
		throw new System.NotImplementedException();
	}

}

